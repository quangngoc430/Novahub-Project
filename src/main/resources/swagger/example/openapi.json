{
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "Development server",
      "url": "http://localhost:8080/api"
    }
  ],
  "info": {
    "description": "This is a simple example API for Helpdesk",
    "version": "1.0.0-oas3",
    "title": "Simple Helpdesk API",
    "contact": {
      "email": "mentor@novahub.vn"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "User",
      "description": "User apis"
    },
    {
      "name": "Role",
      "description": "Role apis"
    },
    {
      "name": "Skill",
      "description": "Skill apis"
    },
    {
      "name": "Category",
      "description": "Category apis"
    },
    {
      "name": "Issue",
      "description": "Issue apis"
    },
    {
      "name": "DayOffType",
      "description": "DayOffType apis"
    },
    {
      "name": "DayOffAccount",
      "description": "DayOffAccount apis"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "basic login",
        "description": "Login user by username and password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "email": "helpdesk@novahub.vn",
                  "password": "password"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "login successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token",
                  "properties": {
                    "account": {
                      "$ref": "#/components/schemas/Account",
                      "properties": {
                        "role": {
                          "$ref": "#/components/schemas/Role"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "user is inactive",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Account is inactive"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "AccountInactiveException with email = helpdesk@novahub.vn"
                    },
                    "path": {
                      "type": "string",
                      "example": "/login"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Invalid email or password"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "AccountInvalidException"
                    },
                    "path": {
                      "type": "string",
                      "example": "/login"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 406
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "enum": [
                            "Email is not empty",
                            "Email contains [a-z|A-Z|0-9|.|_] and end with @novahub.vn"
                          ],
                          "example": "Email contains [a-z|A-Z|0-9|.|_] and end with @novahub.vn"
                        },
                        "password": {
                          "type": "string",
                          "enum": [
                            "Password must have between 8 and 40 characters",
                            "Password is not empty"
                          ]
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "AccountValidationException with number of errors = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/login"
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "user is locked",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Account is locked"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "AccountLockedException with email = helpdesk@novahub.vn"
                    },
                    "path": {
                      "type": "string",
                      "example": "/login"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login/google": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "login with google",
        "description": "login with google",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access_token": {
                    "type": "string",
                    "example": "ya29.GlwCBq8sw1QANaeE-gryVxOa-6JTD58Hk1wHANuvSYDJ0-j-_DsJ9n0AwmoLDMdbt5B4oYW8nR8coesOvZuAcMtje9wi6S17aDXE5gmA6oqSTXtVRGoUIDRwKLeo1A"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "login successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token",
                  "properties": {
                    "account": {
                      "$ref": "#/components/schemas/Account",
                      "properties": {
                        "role": {
                          "$ref": "#/components/schemas/Role"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "access_token is expired | access_token is not true",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "path": {
                      "type": "string",
                      "example": "/login/google"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "email don't end with @novahub.vn | validation request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 406
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "Wrong email format",
                            {
                              "access_token": {
                                "type": "string",
                                "example": ":access_token is not empty"
                              }
                            }
                          ],
                          "example": "Wrong email format"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "EmailFormatException with email = ngoc.bui150019@vnuk.edu.vn"
                    },
                    "path": {
                      "type": "string",
                      "example": "/login/google"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Logout",
        "description": "Logout",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successfully"
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/logout"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/logout"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/logout"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Token not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenNotFoundException with accessToken = dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
                    },
                    "path": {
                      "type": "string",
                      "example": "/logout"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users (ADMIN)",
        "description": "Get all users (ADMIN)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "query",
            "name": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "id,asc",
                "id,desc",
                "email,asc",
                "email,desc",
                "status,asc",
                "status,desc",
                "firstName,asc",
                "firstName,desc",
                "lastName,asc",
                "lastName,desc",
                "address,asc",
                "address,desc"
              ],
              "example": "firstName,desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all users successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sort",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account",
                        "properties": {
                          "role": {
                            "$ref": "#/components/schemas/Role"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },u
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create new user (SIGNUP)",
        "description": "Create new user (SIGNUP)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "helpdesk@novahub.vn"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  },
                  "first_name": {
                    "type": "string",
                    "example": "help"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "desk"
                  },
                  "birth_day": {
                    "type": "string",
                    "description": "yyyy-MM-dd",
                    "example": "1997-09-01"
                  },
                  "address": {
                    "type": "string",
                    "example": "14 An Thuong 32 street, Da Nang city"
                  },
                  "avatar_url": {
                    "type": "string",
                    "example": "http://localhost:8080/avatar.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create new user successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account",
                  "properties": {
                    "role": {
                      "$ref": "#/components/schemas/Role"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 406
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "enum": [
                            "Email is not empty",
                            "Email contains [a-z|A-Z|0-9|.|_] and end with @novahub.vn"
                          ],
                          "example": "Email contains [a-z|A-Z|0-9|.|_] and end with @novahub.vn"
                        },
                        "password": {
                          "type": "string",
                          "enum": [
                            "Password must have between 8 and 40 characters",
                            "Password is not empty"
                          ]
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "CategoryValidationException with number of errors = 2"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Account is exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 409
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Account is exist"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "AccountIsExistException with email = helpdesk@novahub.vn"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get profile of user login",
        "description": "Get profile of user login",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "query",
            "name": "checkPasswordNull",
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get profile of user login successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account",
                  "properties": {
                    "role": {
                      "$ref": "#/components/schemas/Role"
                    }
                  },
                  "is_password_null": {
                    "type": "boolean",
                    "description": "this field will be appear if query param 'checkPassword' equals true",
                    "example": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Get profile of user login",
        "description": "Get profile of user login",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "query",
            "name": "checkPasswordNull",
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "old password (optional)",
                    "example": "password"
                  },
                  "new_password": {
                    "type": "string",
                    "description": "new password (optional)",
                    "example": "newpassword"
                  },
                  "first_name": {
                    "type": "string",
                    "example": "help"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "desk"
                  },
                  "birth_day": {
                    "type": "string",
                    "description": "yyyy-MM-dd",
                    "example": "1997-09-01"
                  },
                  "address": {
                    "type": "string",
                    "example": "14 An Thuong 32 street, Da Nang city"
                  },
                  "avatar_url": {
                    "type": "string",
                    "example": "http://localhost:8080/avatar.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get all skills successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account",
                  "properties": {
                    "category": {
                      "$ref": "#/components/schemas/Role"
                    }
                  },
                  "is_password_null": {
                    "type": "boolean",
                    "description": "this field will be appear if query param 'checkPassword' equals true",
                    "example": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 406
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "Two passwords do not match",
                            "new_password must have between 8 and 40 characters",
                            "password must have between 8 and 40 characters"
                          ],
                          "example": "Two passwords do not match"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "AccountPasswordNotEqual with message = Password do not match"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by id",
        "description": "Get user by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          },
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get user by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account",
                  "properties": {
                    "role": {
                      "$ref": "#/components/schemas/Role"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "User not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "UserNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user by id (ADMIN)",
        "description": "Update user by id (ADMIN)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          },
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "new password (optional)",
                    "example": "password"
                  },
                  "first_name": {
                    "type": "string",
                    "example": "help"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "desk"
                  },
                  "birth_day": {
                    "type": "string",
                    "description": "yyyy-MM-dd",
                    "example": "1997-09-01"
                  },
                  "address": {
                    "type": "string",
                    "example": "14 An Thuong 32 street, Da Nang city"
                  },
                  "avatar_url": {
                    "type": "string",
                    "example": "http://localhost:8080/avatar.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account",
                  "properties": {
                    "role": {
                      "$ref": "#/components/schemas/Role"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "User not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "UserNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 406
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "password": {
                          "type": "string",
                          "enum": [
                            "password must have between 8 and 40 characters"
                          ],
                          "example": "password must have between 8 and 40 characters"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "AccountValidationException with number of errors = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user by id (ADMIN)",
        "description": "Delete user by id (ADMIN)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          },
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete user by id successfully"
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "User not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "UserNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get all roles",
        "description": "Get all roles",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "query",
            "name": "keyword",
            "schema": {
              "type": "string",
              "example": "ADMIN"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "id,asc",
                "id,desc",
                "name,asc",
                "name,desc"
              ],
              "example": "name,desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all roles successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sort",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Role"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/roles"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/roles"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/roles"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles/{id}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get a role by id",
        "description": "Get a role by id",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all roles successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/roles/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/roles/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/roles/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Role not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "RoleNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/roles/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get all categories",
        "description": "Get all categories",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "query",
            "name": "keyword",
            "schema": {
              "type": "string",
              "example": "Frontend"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "id,asc",
                "id,desc",
                "name,asc",
                "name,desc"
              ],
              "example": "name,desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all categories succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sort",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Create a category (ADMIN)",
        "description": "Create a category (ADMIN)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Frontend"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create a category successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 406
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "enum": [
                            "name is not empty"
                          ],
                          "example": "name is not empty"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "CategoryValidationException with number of errors = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Category is exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 409
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Category is exist"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "CategoryIsExistException with name = Frontend"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get a category by id (ADMIN)",
        "description": "Get a category by id (ADMIN)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a category by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Category not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "CategoryNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "Create a category by id (ADMIN)",
        "description": "Create a category by id (ADMIN)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "backend"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create a category by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Category not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "CategoryNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories/{id}"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 406
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "enum": [
                            "name is not empty"
                          ],
                          "example": "name is not empty"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "CategoryValidationException with number of errors = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories/{id}"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Category is exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 409
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Category is exist"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "CategoryIsExistException with name = Frontend"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "Delete a category by id (ADMIN)",
        "description": "Delete a category by id (ADMIN)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a category by id successfully"
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Category not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "CategoryNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}/skills": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get all skills by category id",
        "description": "Get all skills by category id",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "keyword",
            "schema": {
              "type": "string",
              "example": "Java"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "id,asc",
                "id,desc",
                "name,asc",
                "name,desc",
                "createdAt,asc",
                "createdAt,desc",
                "updatedAt,asc",
                "updatedAt,desc"
              ],
              "example": "name,desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all skills successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sort",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Skill",
                        "properties": {
                          "category": {
                            "$ref": "#/components/schemas/Category"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/category/{id}/skills"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/category/{id}/skills"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/category/{id}/skills"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Category not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "CategoryNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/categories/{id}/skills"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/skills": {
      "get": {
        "tags": [
          "Skill"
        ],
        "summary": "Get all skills",
        "description": "Get all skills",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "query",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "keyword",
            "schema": {
              "type": "string",
              "example": "Java"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "id,asc",
                "id,desc",
                "name,asc",
                "name,desc",
                "createdAt,asc",
                "createdAt,desc",
                "updatedAt,asc",
                "updatedAt,desc"
              ],
              "example": "name,desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all skills successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sort",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Skill",
                        "properties": {
                          "category": {
                            "$ref": "#/components/schemas/Category"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Skill"
        ],
        "summary": "Create new skill (ADMIN)",
        "description": "Create new skill (ADMIN)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Java"
                  },
                  "category_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get all skills successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Skill",
                  "properties": {
                    "category": {
                      "$ref": "#/components/schemas/Category"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Category not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "CategoryNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 406
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "enum": [
                            "name is not empty"
                          ],
                          "example": "name is not empty"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "SkillValidationException with number of errors = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Skill is exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 409
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Skill is exist"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "SkillIsExistException with name = Java"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/skills/{id}": {
      "get": {
        "tags": [
          "Skill"
        ],
        "summary": "Get a skill by id (ADMIN)",
        "description": "Get a skill by id (ADMIN)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Skill",
                  "properties": {
                    "category": {
                      "$ref": "#/components/schemas/Category"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "skill not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Skill not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "SkillNotFoundException with id = {id}"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Skill"
        ],
        "summary": "Edit a skill by id (ADMIN)",
        "description": "Edit a skill by id (ADMIN)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Java"
                  },
                  "category_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Skill",
                  "properties": {
                    "category": {
                      "$ref": "#/components/schemas/Category"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "skill not found | Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "Skill not found",
                            "Category not found"
                          ],
                          "example": "Skill not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "SkillNotFoundException with id = 1",
                        "CategoryNotFoundException with id = 1"
                      ],
                      "example": "SkillNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 406
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "enum": [
                            "name is not empty"
                          ],
                          "example": "name is not empty"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "SkillValidationException with number of errors = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Skill is exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 406
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "Skill is exist"
                          ],
                          "example": "Skill is exist"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "SkillIsExistException with name = Perl"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Skill"
        ],
        "summary": "Delete a skill by id (ADMIN)",
        "description": "Delete a skill by id (ADMIN)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully"
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "skill not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Skill not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "SkillNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/skills/{id}/users": {
      "get": {
        "tags": [
          "Skill"
        ],
        "summary": "Get a skill by id",
        "description": "Get a skill by id",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "id,asc",
                "id,desc",
                "email,asc",
                "email,desc",
                "status,asc",
                "status,desc",
                "firstName,asc",
                "firstName,desc",
                "lastName,asc",
                "lastName,desc",
                "address,asc",
                "address,desc"
              ],
              "example": "firstName,desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sort",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account",
                        "properties": {
                          "role": {
                            "$ref": "#/components/schemas/Role"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}/users"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}/users"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/{id}/users"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "skill not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Skill not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "SkillNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/skills/1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/skills/me": {
      "get": {
        "tags": [
          "Skill"
        ],
        "summary": "Get all skills of user login",
        "description": "Get all skills of user login",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "query",
            "name": "keyword",
            "schema": {
              "type": "string",
              "example": "Java"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "id,asc",
                "id,desc",
                "name,asc",
                "name,desc",
                "createdAt,asc",
                "createdAt,desc",
                "updatedAt,asc",
                "updatedAt,desc"
              ],
              "example": "name,desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all skills successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sort",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Skill",
                        "properties": {
                          "category": {
                            "$ref": "#/components/schemas/Category",
                            "properties": {
                              "level": {
                                "$ref": "#/components/schemas/Level"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Skill"
        ],
        "summary": "Create new skill for user login",
        "description": "Create new skill for user login",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Java"
                  },
                  "category_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                  },
                  "level": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "integer",
                        "format": "int64",
                        "example": 7
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create new skill successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Skill",
                  "properties": {
                    "category": {
                      "$ref": "#/components/schemas/Category"
                    },
                    "level": {
                      "$ref": "#/components/schemas/Level"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 406
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "enum": [
                            "name is not empty"
                          ],
                          "example": "name is not empty"
                        },
                        "value": {
                          "type": "string",
                          "enum": [
                            "value must be greater than or equal to 1",
                            "value must be less than or equal to 10"
                          ],
                          "example": "value must be less than or equal to 10"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "SkillValidationException with number of errors = {numberOfErrors}"
                      ],
                      "example": "SkillValidationException with number of errors = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Skill is exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 406
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "enum": [
                            "name is not empty"
                          ],
                          "example": "name is not empty"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "SkillIsExistException with name = Perl"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/skills/me/{id}": {
      "get": {
        "tags": [
          "Skill"
        ],
        "summary": "Get an skill by id of user login",
        "description": "Get an skill by id of user login",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get an skill by id of user login successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Skill",
                  "properties": {
                    "category": {
                      "$ref": "#/components/schemas/Category"
                    },
                    "level": {
                      "$ref": "#/components/schemas/Level"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "skill not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Skill not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "SkillNotFoundException with id = {id}"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Skill"
        ],
        "summary": "Update an skill by id of user login",
        "description": "Update an skill by id of user login",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Java"
                  },
                  "category_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "level": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10,
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update an skill by id of user login successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Skill",
                  "properties": {
                    "category": {
                      "$ref": "#/components/schemas/Category"
                    },
                    "level": {
                      "$ref": "#/components/schemas/Level"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "skill not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Skill not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "SkillNotFoundException with id = {id}"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 406
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "enum": [
                            "value is not null",
                            "value must be greater than or equal to 1",
                            "value must be less than or equal to 10"
                          ],
                          "example": "value is not null"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "LevelValidationException with number of errors = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Skill"
        ],
        "summary": "Delete an skill by id of user login",
        "description": "Delete an skill by id of user login",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete an skill by id of user login"
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "skill not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Skill not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "SkillNotFoundException with id = {id}"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/skills/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/skills": {
      "get": {
        "tags": [
          "Skill"
        ],
        "summary": "Get an skill by id of user login",
        "description": "Get an skill by id of user login",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "id,asc",
                "id,desc",
                "name,asc",
                "name,desc",
                "createdAt,asc",
                "createdAt,desc",
                "updatedAt,asc",
                "updatedAt,desc"
              ],
              "example": "name,desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all skills successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sort",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Skill",
                        "properties": {
                          "category": {
                            "$ref": "#/components/schemas/Category",
                            "properties": {
                              "level": {
                                "$ref": "#/components/schemas/Level"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}/skills"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}/skills"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}/skills"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "User not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "UserNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/{id}/skills"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issues": {
      "get": {
        "tags": [
          "Issue"
        ],
        "summary": "Get all issues (ADMIN)",
        "description": "Get all issues (ADMIN)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "query",
            "name": "keyword",
            "schema": {
              "type": "string",
              "example": "Java"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "example": "APPROVE"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "id,asc",
                "id,desc",
                "title,asc",
                "title,desc",
                "content,asc",
                "content,desc",
                "replyMessage,asc",
                "replyMessage,desc",
                "status,asc",
                "status,desc"
              ],
              "example": "title,desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all issues successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sort",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Issue",
                        "properties": {
                          "account": {
                            "$ref": "#/components/schemas/Account",
                            "properties": {
                              "role": {
                                "$ref": "#/components/schemas/Role"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issues/{id}": {
      "get": {
        "tags": [
          "Issue"
        ],
        "summary": "Get an issue by id (ADMIN)",
        "description": "Get an issue by id (ADMIN)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get an issue by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Issue",
                  "properties": {
                    "account": {
                      "$ref": "#/components/schemas/Account",
                      "properties": {
                        "role": {
                          "$ref": "#/components/schemas/Role"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Issue not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532590594.283
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Issue not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "IssueNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Issue"
        ],
        "summary": "Edit an issue by id (ADMIN)",
        "description": "Edit an issue by id (ADMIN)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "title of issue {id}"
                  },
                  "content": {
                    "type": "string",
                    "example": "content of issue {id}"
                  },
                  "reply_message": {
                    "type": "string",
                    "example": "reply_message of issue {id}"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "APPROVE",
                      "DENY",
                      "PENDING"
                    ],
                    "example": "APPROVE"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Edit an issue by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Issue",
                  "properties": {
                    "account": {
                      "$ref": "#/components/schemas/Account",
                      "properties": {
                        "role": {
                          "$ref": "#/components/schemas/Role"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Issue not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532590594.283
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Issue not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "IssueNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532592934.677
                    },
                    "status": {
                      "type": "integer",
                      "example": 406
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "status does not match any statuses"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "IssueValidationException with number of errors = {id}"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Issue"
        ],
        "summary": "Delete an issue by id (ADMIN)",
        "description": "Delete an issue by id (ADMIN)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete an issue by id successfully"
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Issue not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532590594.283
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Issue not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "IssueNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issues/{id}/action": {
      "get": {
        "tags": [
          "Issue"
        ],
        "summary": "APPROVE or DENY issue",
        "description": "APPROVE or DENY issue with token",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "APPROVE",
                "DENY"
              ],
              "example": "APPROVE"
            }
          },
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string",
              "example": "21bd65a250c8b6ff0da08ad59fe8941b972121722ec896b82fa2917fffa6f3dc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "APPROVE or DENY issue successfully"
          },
          "404": {
            "description": "issue not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532462094.006"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Issue not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "IssueNotFoundException with id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues/1"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable (Status != [APPROVE|DENY])"
          },
          "423": {
            "description": "Issue is closed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532601270.69
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 423
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Issue is closed"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "IssueIsClosedException with issueId = 2"
                    },
                    "path": {
                      "type": "string",
                      "example": "/issues/{id}/action"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issues/me": {
      "get": {
        "tags": [
          "Issue"
        ],
        "summary": "Get all issues of user login",
        "description": "Get all issues of user login",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "id,asc",
                "id,desc",
                "title,asc",
                "title,desc",
                "content,asc",
                "content,desc",
                "replyMessage,asc",
                "replyMessage,desc",
                "status,asc",
                "status,desc"
              ],
              "example": "title,desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all issues of user login successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sort",
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/Issue",
                      "properties": {
                        "account": {
                          "$ref": "#/components/schemas/Account",
                          "properties": {
                            "role": {
                              "$ref": "#/components/schemas/Role"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Issue"
        ],
        "summary": "Create an issue of user login",
        "description": "Create an issue of user login",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "title of new issue"
                  },
                  "content": {
                    "type": "string",
                    "example": "content of new issue"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create an issue of user login successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Issue",
                  "properties": {
                    "account": {
                      "$ref": "#/components/schemas/Account",
                      "properties": {
                        "role": {
                          "$ref": "#/components/schemas/Role"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issues/me/{id}": {
      "get": {
        "tags": [
          "Issue"
        ],
        "summary": "Get issue by id of user login",
        "description": "Get issue by id",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get issue by id user login successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Issue",
                  "properties": {
                    "account": {
                      "$ref": "#/components/schemas/Account",
                      "properties": {
                        "role": {
                          "$ref": "#/components/schemas/Role"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Issue not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532590594.283
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Issue not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "IssueNotFoundException with id = {id}"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Issue"
        ],
        "summary": "Edit an issue by id",
        "description": "Edit an issue by id",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "title of issue after editing"
                  },
                  "content": {
                    "type": "string",
                    "example": "content of issue after editing"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Edit issue by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Issue",
                  "properties": {
                    "account": {
                      "$ref": "#/components/schemas/Account",
                      "properties": {
                        "role": {
                          "$ref": "#/components/schemas/Role"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Issue not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532590594.283
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Issue not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "IssueNotFoundException with id = {id}"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Issue"
        ],
        "summary": "Delete an issue by id",
        "description": "Delete an issue by id",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete issue by id successfully"
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues/{id}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Issue not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532590594.283
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Issue not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "IssueNotFoundException with id = {id}"
                    },
                    "path": {
                      "type": "string",
                      "example": "/users/me/issues/{id}"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/day-off-types": {
      "get": {
        "tags": [
          "DayOffType"
        ],
        "summary": "User get all DayOffType",
        "description": "User get all DayOffType",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all dayofftypes successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayOffType"
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/api/day-off-types"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/api/day-off-types"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/api/day-off-types"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/day-off-types/{id}": {
      "get": {
        "tags": [
          "DayOffType"
        ],
        "summary": "User get DayOffType by id",
        "description": "User get DayOffType by id",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get DayOffType by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayOffType"
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/api/day-off-types"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/api/day-off-types"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/api/day-off-types"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "CommonDayOffType Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "CommonType is not exist"
                    },
                    "path": {
                      "type": "string",
                      "example": "/day-off-types"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/day-off-types": {
      "post": {
        "tags": [
          "DayOffType"
        ],
        "summary": "Create a dayoff type (ADMIN)",
        "description": "Create a dayoff type (ADMIN)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "Yearly"
                  },
                  "defaultQuota": {
                    "type": "integer",
                    "format": "int32",
                    "example": 80
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create a dayoff type successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayOffType"
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-types"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-types"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-types"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Conflict"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Day off type was exist"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-types"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/day-off-types/{id}": {
      "put": {
        "tags": [
          "DayOffType"
        ],
        "summary": "Update a dayoff type (ADMIN)",
        "description": "Update a dayoff type (ADMIN)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "example": null
                  },
                  "type": {
                    "type": "string",
                    "example": "Yearly"
                  },
                  "defaultQuota": {
                    "type": "integer",
                    "format": "int32",
                    "example": 80
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update a dayoff type successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayOffType"
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-types"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-types"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-types"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "DayOffType Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "DayOffType is not exist"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-types"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DayOffType"
        ],
        "summary": "Delete a dayoff type (ADMIN)",
        "description": "Delete a dayoff type (ADMIN)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a dayoff type successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayOffType"
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-types"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-types"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-types"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "DayOffType Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 404
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "DayOffType is not exist"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-types"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/day-off-accounts": {
      "get": {
        "tags": [
          "DayOffAccount"
        ],
        "summary": "User get all day off accounts",
        "description": "User get all day off accounts",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User get day off accounts successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayOffAccount"
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/day-off-accounts"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/day-off-accouts"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/day-off-accouts"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/day-off-accounts": {
      "post": {
        "tags": [
          "DayOffAccount"
        ],
        "summary": "Admin create new day off account",
        "description": "Admin create new day off account",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dayOffTypeId": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "accountId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User get day off accounts successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayOffAccount"
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-accouts"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-accouts"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-accounts"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "DayOffAccount was exist in database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "DayOffAccountIsExistException with type id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-accounts"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "DayOffAccount"
        ],
        "summary": "Admin get all DayOffAccounts or search DayOffAccount by accountId",
        "description": "Admin get all DayOffAccounts or search DayOffAccount by accountId",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User get day off accounts successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayOffAccount"
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-accouts"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-accouts"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-accounts"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Day off type not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Day off type not found"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-accounts"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/day-off-accounts/{id}": {
      "put": {
        "tags": [
          "DayOffAccount"
        ],
        "summary": "Admin get all DayOffAccounts or search DayOffAccount by accountId",
        "description": "Admin get all DayOffAccounts or search DayOffAccount by accountId",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "privateQuota": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User get day off accounts successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayOffAccount"
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-accouts"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-accouts"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-accounts"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Day off account not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Day off account not found"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-accounts"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/day-offs": {
      "get": {
        "tags": [
          "DayOff"
        ],
        "summary": "User get DayOff by status (APPROVED, DENIED, CANCELLED)",
        "description": "User get DayOff by status (APPROVED, DENIED, CANCELLED)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "example": "APPROVED"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "id,asc",
                "id,desc",
                "startDate,asc",
                "startDate,desc",
                "endDate,asc",
                "endDate,desc",
                "status,asc",
                "status,desc"
              ],
              "example": "id,desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all issues successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sort",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DayOff",
                        "properties": {
                          "account": {
                            "$ref": "#/components/schemas/DayOffAccount",
                            "properties": {
                              "role": {
                                "$ref": "#/components/schemas/DayOffType"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-offs"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-offs"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-offs"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DayOff"
        ],
        "summary": "User create new day off",
        "description": "User create new day off",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "numberOfHours": {
                    "type": "integer",
                    "format": "int32",
                    "example": 24
                  },
                  "startDate": {
                    "type": "string",
                    "format": "yyyy-MM-dd",
                    "example": "2018-09-14"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "yyyy-MM-dd",
                    "example": "2018-09-14"
                  },
                  "comment": {
                    "type": "string",
                    "example": "Cho em nghi sang thu 7"
                  },
                  "dayOffAccount": {
                    "type": "object",
                    "properties": {
                      "dayOffTypeId": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                      },
                      "year": {
                        "type": "integer",
                        "format": "int32",
                        "example": 2018
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User get day off accounts successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayOff"
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-off-accouts"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-offs"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-offs"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "DayOffAccount was exist in database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "DayOffAccountIsExistException with type id = 1"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-offs"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/day-offs/{id}": {
      "get": {
        "tags": [
          "DayOff"
        ],
        "summary": "User get DayOff by status (APPROVED, DENIED, CANCELLED)",
        "description": "User get DayOff by status (APPROVED, DENIED, CANCELLED)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all issues successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayOff",
                  "properties": {
                    "dayOffAccount": {
                      "$ref": "#/components/schemas/DayOffAccount",
                      "properties": {
                        "dayOffType": {
                          "$ref": "#/components/schemas/DayOffType"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-offs"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-offs"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-offs"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/day-offs/{id}/answer": {
      "get": {
        "tags": [
          "DayOff"
        ],
        "summary": "Admin answer user dayoff",
        "description": "Admin answer user dayoff",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "APPROVED",
                "DENIED",
                "CANCELLED"
              ],
              "example": "APPROVED"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Admin answer day off request successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayOff",
                  "properties": {
                    "dayOffAccount": {
                      "$ref": "#/components/schemas/DayOffAccount",
                      "properties": {
                        "dayOffType": {
                          "$ref": "#/components/schemas/DayOffType"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-offs/1/answer"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-offs/1/answer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-offs/1/answer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/day-offs": {
      "get": {
        "tags": [
          "DayOff"
        ],
        "summary": "Admin get day off by status and keyword",
        "description": "User get DayOff by status (APPROVED, DENIED, CANCELLED)",
        "parameters": [
          {
            "in": "header",
            "name": "access_token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "APPROVED",
                "DENIED",
                "CANCELLED",
                "NONCANCELLED"
              ],
              "example": "APPROVED"
            }
          },
          {
            "in": "query",
            "name": "keyword",
            "required": true,
            "schema": {
              "type": "string",
              "example": "hepdesk@novahub.vn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Admin answer day off request successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayOff"
                }
              }
            }
          },
          "400": {
            "description": "Token is expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": 1532589762.947
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "TokenIsExpiredException with token = 579989c508208d49c978e6cb99383688e6f1fedabfc22c27d3542ab0341d3b13"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-offs"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 401
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid token"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-offs"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access is denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "example": "1532506012.933"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64",
                      "example": 403
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access is denied"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Access is denied"
                    },
                    "path": {
                      "type": "string",
                      "example": "/admin/day-offs"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "email": {
            "type": "string",
            "example": "helpdesk@novahub.vn"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "LOCKED"
            ],
            "example": "ACTIVE"
          },
          "first_name": {
            "type": "string",
            "example": "help"
          },
          "last_name": {
            "type": "string",
            "example": "desk"
          },
          "birth_day": {
            "type": "string",
            "format": "date",
            "description": "pattern yyyy-MM-dd",
            "example": "1997-09-01T00:00:00.000Z"
          },
          "address": {
            "type": "string",
            "example": "14 An Thuong 32 street, Da Nang city"
          },
          "avatar_url": {
            "type": "string",
            "example": "http://localhost:8080/avatar.png"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-07-24 17:50:45"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-07-24 17:50:45"
          },
          "role_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "enum": [
              "ADMIN",
              "CLERK",
              "USER"
            ],
            "example": "ADMIN"
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-07-24 18:39:48"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-07-24 18:39:48"
          },
          "access_token": {
            "type": "string",
            "example": "dff4d0d4891bfd8bafdb859dac4cbccb218bcf5adc9887a627c6c159f76ef0b9"
          },
          "expired_at": {
            "type": "integer",
            "format": "int64",
            "example": 3600
          },
          "expired_in": {
            "type": "string",
            "format": "date-time",
            "example": "2018-07-24 19:39:48"
          },
          "account_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          }
        }
      },
      "Skill": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Java"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-07-24 18:39:48"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-07-24 18:39:48"
          },
          "category_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          }
        }
      },
      "Level": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "value": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 10,
            "example": 7
          },
          "account_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "skill_id": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-07-24 17:50:45"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-07-24 17:50:45"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Back-end"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-07-24 17:50:45"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-07-24 17:50:45"
          }
        }
      },
      "Issue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Refund tiền ăn"
          },
          "content": {
            "type": "string",
            "example": "Tiền ăn: 700.000VND"
          },
          "status": {
            "type": "string",
            "enum": [
              "NONE",
              "APPROVE",
              "DENY",
              "PENDING"
            ],
            "example": "PENDING"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-07-24 18:39:48"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-07-24 18:39:48"
          },
          "reply_message": {
            "type": "string",
            "example": "Đang suy nghĩ"
          },
          "account_id": {
            "type": "string",
            "example": 1
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "pageable": {
            "type": "object",
            "properties": {
              "sort": {
                "type": "object",
                "properties": {
                  "sorted": {
                    "type": "boolean",
                    "example": false
                  },
                  "unsorted": {
                    "type": "boolean",
                    "example": true
                  }
                }
              },
              "pageSize": {
                "type": "integer",
                "format": "int64",
                "example": 20
              },
              "pageNumber": {
                "type": "integer",
                "format": "int64",
                "example": 0
              },
              "offset": {
                "type": "integer",
                "format": "int64",
                "example": 0
              },
              "paged": {
                "type": "boolean",
                "example": true
              },
              "unpaged": {
                "type": "boolean",
                "example": false
              }
            }
          },
          "last": {
            "type": "boolean",
            "example": true
          },
          "first": {
            "type": "boolean",
            "example": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "totalElements": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "sort": {
            "type": "object",
            "properties": {
              "sorted": {
                "type": "boolean",
                "example": false
              },
              "unsorted": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "example": 20
          },
          "number": {
            "type": "integer",
            "format": "int64",
            "example": 0
          }
        }
      },
      "DayOffType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "type": {
            "type": "string",
            "example": "Yearly"
          },
          "defaultQuota": {
            "type": "integer",
            "format": "int32",
            "example": 80
          }
        }
      },
      "DayOffAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "year": {
            "type": "integer",
            "format": "int32",
            "example": 2018
          },
          "privateQuota": {
            "type": "integer",
            "format": "int32",
            "example": 80
          },
          "remainingTime": {
            "type": "integer",
            "format": "int32",
            "example": 80
          },
          "accountId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          }
        }
      },
      "DayOff": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "comment": {
            "type": "string",
            "example": "Sep cho em nghi ca ngay"
          },
          "startDate": {
            "type": "string",
            "format": "yyyy-MM-dd",
            "example": "2018-12-31"
          },
          "endDate": {
            "type": "string",
            "format": "yyyy-MM-dd",
            "example": "2018-12-31"
          },
          "createdAt": {
            "type": "string",
            "example": "2018-08-07T16:56:12.891"
          },
          "updatedAt": {
            "type": "string",
            "example": "2018-08-07T16:56:12.891"
          }
        }
      }
    }
  }
}